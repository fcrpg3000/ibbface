<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2013. ibbface.com All rights reserved.
  ~ @(#) app-security.xml 2013-09-08 22:41
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="restAuthenticationFilter" class="com.ibbface.interfaces.web.RestAuthenticationFilter">
    </bean>

    <!-- oauth access token filter -->
    <bean id="oAuthAccessTokenFilter" class="com.ibbface.interfaces.oauth.OAuthAccessTokenFilter">
        <property name="userService" ref="userService" />
    </bean>

    <bean id="oAuthFormAuthenticationFilter" class="com.ibbface.interfaces.oauth.OAuthFormAuthenticationFilter">
    </bean>

    <bean id="shiroRedisCacheManager" class="com.ibbface.base.cache.shiro.ShiroRedisCacheManager">
        <constructor-arg ref="sessionRedisTemplate" />
    </bean>

    <bean id="shiroRealmService" class="com.ibbface.interfaces.realm.ShiroRealmService">
        <constructor-arg index="0" ref="userService" />
        <property name="authenticationCachingEnabled" value="true" />
        <property name="cacheManager" ref="shiroRedisCacheManager" />
        <property name="credentialsMatcher" ref="userCredentialsMatcher" />
    </bean>

    <bean id="oAuthRealmService" class="com.ibbface.interfaces.oauth.OAuthRealmService">
        <property name="userService" ref="userService" />
        <property name="authenticationCachingEnabled" value="true" />
        <property name="cacheManager" ref="shiroRedisCacheManager" />
        <property name="credentialsMatcher" ref="userCredentialsMatcher" />
    </bean>

    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="cacheManager" ref="shiroRedisCacheManager" />
        <property name="globalSessionTimeout" value="${session.timeout}" />
        <property name="sessionIdCookieEnabled" value="${session.idCookie.enabled}" />
    </bean>

    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="oAuthRealmService" />
    </bean>

    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
            depends-on="lifecycleBeanPostProcessor" />

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager" />
        <property name="loginUrl" value="/oauth/authorize" />
        <property name="successUrl" value="/" />
        <property name="filters">
            <map key-type="java.lang.String">
                <entry key="oauthForm" value-ref="oAuthFormAuthenticationFilter" />
                <entry key="oauthToken" value-ref="oAuthAccessTokenFilter" />
            </map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                /oauth/authorize = authc
                /oauth/authorize = oauthForm
                /admin/** = noSessionCreation, oauthToken, roles[admin]
                /** = noSessionCreation, oauthToken
            </value>
        </property>
    </bean>

</beans>